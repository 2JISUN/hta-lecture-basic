/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.13
 * Generated at: 2023-09-22 05:02:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import common.JDBCConnect;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/member/../include/header.jsp", Long.valueOf(1695278344167L));
    _jspx_dependants.put("/member/../include/footer.jsp", Long.valueOf(1695089494198L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("common.JDBCConnect");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");




ServletContext context = pageContext.getServletContext(); //절대경로를 얻는다
System.out.println("context===" + context);
String saveDirectory = "upload";
String realFolder = context.getRealPath(saveDirectory);

//0.전역변수 할당
//get : request.getParameter를 사용하여 사용자가 입력한 정보를 받아옵니다.

//1. driver 찾기
//2. db연동 및 해제
JDBCConnect jdbcConn = new JDBCConnect(); //Oracle 데이터베이스에 연결을 수행

//3. db접근 > 쿼리 작성 > select > db 가져오기 > executeQuery()
//3-1. 쿼리 작성
String sql = 
"select "+
	   "no,"+
	   "rpad(substr(id,1,3),length(id),'*') as id,"+  
	   "id as realID,"+  /* 마스킹 안 된 아이디 */
	   "substr(name,1,1) || lpad('*',length(name)-2,'*') || substr(name,length(name),1) as name," +
	   "rpad(substr(postcode,1,2),5,'*') as postcode,"+
	   "address,"+
	   "addressdetail,"+
	   "to_char(regdate,'yyyy/mm/dd') as regdate " + 
"from member"
		;

//3-2. 쿼리 세팅(저장)
PreparedStatement pstmt = null; //Prepared : SQL 문장을 실행하기
pstmt = jdbcConn.conn.prepareStatement(sql); //prepare : PreparedStatement 객체를 생성하는 메서드
//set : pstmt.setString를 사용하여 사용자가 입력한 정보를 db에 저장합니다.


//4. db실행 > 쿼리 실행 > db 가져오기(결과 확인) : 화면에 뿌린다 > executeQuery()
ResultSet rs = null; //rs는 SQL 쿼리의 결과 집합으로 JDBC 객체임
rs = pstmt.executeQuery(); //executeQuery() 쿼리를 데이터베이스로 보내고 그 결과를 가져온다. 

//5. 조건 > 값 전체 뿌리기




      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
 
	String loggedID = (String)session.getAttribute("loggedID");
	String loggedName = (String)session.getAttribute("loggedName");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/bootstrap.min.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/form.css\" />\r\n");
      out.write("<script src=\"../js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<script src=\"../js/jquery-3.7.1.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\">\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    <header class=\"d-flex flex-wrap justify-content-center py-3 mb-4 border-bottom\">\r\n");
      out.write("      <a href=\"../index/index.jsp\" class=\"d-flex align-items-center mb-3 mb-md-0 me-md-auto link-body-emphasis text-decoration-none\">\r\n");
      out.write("        <svg class=\"bi me-2\" width=\"40\" height=\"32\"><use xlink:href=\"#bootstrap\"></use></svg>\r\n");
      out.write("        <span class=\"fs-4\">👻 ← click me</span>\r\n");
      out.write("      </a>\r\n");
      out.write("      \r\n");
      out.write("      ");
 if(loggedName==null){ 
      out.write("\r\n");
      out.write("			<!-- 회원가입 -->\r\n");
      out.write("	      <ul class=\"nav nav-pills\">\r\n");
      out.write("	        <li class=\"nav-item\">\r\n");
      out.write("	        	<a href=\"../index/index.jsp\" class=\"nav-link active\" aria-current=\"page\">마이홈</a>\r\n");
      out.write("	        </li>\r\n");
      out.write("	        <li class=\"nav-item\">\r\n");
      out.write("	        	<a href=\"../member/insert.jsp\" class=\"nav-link\">회원가입</a>\r\n");
      out.write("	        </li>\r\n");
      out.write("	        <li class=\"nav-item\"><a href=\"../member/login.jsp\" class=\"nav-link\">로그인</a></li>\r\n");
      out.write("	        <!-- <li class=\"nav-item\"><a href=\"../board/list.jsp\" class=\"nav-link\">게시판</a></li> -->\r\n");
      out.write("	      </ul>\r\n");
      out.write("      ");
 } else { 
      out.write("\r\n");
      out.write("	      <!-- 로그아웃 -->\r\n");
      out.write("	      <ul class=\"nav nav-pills\">\r\n");
      out.write("	        <li class=\"nav-item\"><a href=\"../index/index.jsp\" class=\"nav-link active\" aria-current=\"page\">마이홈</a></li>\r\n");
      out.write("	        <li class=\"nav-item\"><a href=\"../member/logout.jsp\" class=\"nav-link\">로그아웃</a></li>\r\n");
      out.write("	        <li class=\"nav-item\"><a href=\"../member/info.jsp?userID=");
      out.print(loggedID );
      out.write("\" class=\"nav-link\">");
      out.print( loggedName );
      out.write("</a></li>\r\n");
      out.write("	        <li class=\"nav-item\"><a href=\"../board/list.jsp\" class=\"nav-link\">게시판</a></li>\r\n");
      out.write("	      </ul>\r\n");
      out.write("      ");
 } 
      out.write("\r\n");
      out.write("    </header>\r\n");
      out.write("  </div>\r\n");
      out.write("  <!-- header 끝 -->\r\n");
      out.write("  \r\n");
      out.write("  <main>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("	<form action=\"../member/delete-all.jsp\">\r\n");
      out.write("		<table class=\"table\">\r\n");
      out.write("		  <thead>\r\n");
      out.write("		    <tr>\r\n");
      out.write("		      <th scope=\"col\">no</th>\r\n");
      out.write("		      <th scope=\"col\">id</th>\r\n");
      out.write("		      <th scope=\"col\">name</th>\r\n");
      out.write("		      <th scope=\"col\">postcode</th>\r\n");
      out.write("		      <th scope=\"col\">address</th>\r\n");
      out.write("		      <th scope=\"col\">detail address</th>\r\n");
      out.write("		      <th scope=\"col\">regdate</th>\r\n");
      out.write("		      <th scope=\"col\">delete</th>\r\n");
      out.write("		      <th scope=\"col\">\r\n");
      out.write("		      	<input type=\"checkbox\" \r\n");
      out.write("		      		   id=\"checkAll\">\r\n");
      out.write("		      </th>\r\n");
      out.write("		    </tr>\r\n");
      out.write("		  </thead>\r\n");
      out.write("		  \r\n");
      out.write("		  <tbody>\r\n");
      out.write("		   		");
 while(rs.next()){ 
      out.write("\r\n");
      out.write("		   		    <tr>\r\n");
      out.write("			   	      <th scope=\"row\">");
      out.print(rs.getInt("no"));
      out.write("</th>\r\n");
      out.write("			   	      <td>\r\n");
      out.write("			   	      	<a href=\"../member/info.jsp?userID=");
      out.print(rs.getString("realID") );
      out.write("\">\r\n");
      out.write("			   	      		");
      out.print(rs.getString("id"));
      out.write("\r\n");
      out.write("			   	      	</a>\r\n");
      out.write("			   	      </td>\r\n");
      out.write("			   	      <td>");
      out.print(rs.getString("name") );
      out.write("</td>\r\n");
      out.write("			   	      <td>");
      out.print(rs.getString("postcode") );
      out.write("</td>\r\n");
      out.write("			   	      <td>");
      out.print(rs.getString("address") );
      out.write("</td>\r\n");
      out.write("			   	      <td>");
      out.print(rs.getString("addressdetail") );
      out.write("</td>\r\n");
      out.write("			   	      <td>");
      out.print(rs.getString("regdate") );
      out.write("</td>\r\n");
      out.write("			   	      <td>\r\n");
      out.write("			   	      	<button class=\"btn btn-danger btnDelete\"\r\n");
      out.write("			   	      			data-no=\"");
      out.print(rs.getInt("no") );
      out.write("\"> <!-- data-어쩌고 : 사용자가 임의로 속성을 만들 수 있다. -->\r\n");
      out.write("			   	      		삭제\r\n");
      out.write("			   	      	</button>\r\n");
      out.write("			   	      </td>\r\n");
      out.write("			   	      <td scope=\"col\">\r\n");
      out.write("			   	      	<input type=\"checkbox\" \r\n");
      out.write("					   	       name=\"check\" \r\n");
      out.write("					   	       class=\"check\"\r\n");
      out.write("					   	       value=\"");
      out.print(rs.getInt("no"));
      out.write("\">\r\n");
      out.write("			   	      </td>\r\n");
      out.write("			   	    </tr>\r\n");
      out.write("		   		");
 } 
      out.write("\r\n");
      out.write("		  </tbody>\r\n");
      out.write("		</table>\r\n");
      out.write("		<button class=\"btn btn-danger\" id=\"btnAll\">삭제</button>\r\n");
      out.write("		\r\n");
      out.write("	</form>\r\n");
      out.write("	<!-- 검색기능 추가 -->\r\n");
      out.write("	<!-- 폼 태그 안의 태그에서 name이 중요하다 -->\r\n");
      out.write("	<div class=\"d-flex justify-content-center mt-5\">\r\n");
      out.write("		<form action=\"../member/member-search-process.jsp\" >\r\n");
      out.write("						<select name=\"searchItem\">\r\n");
      out.write("							<option value=\"name\">이름</option>\r\n");
      out.write("							<option value=\"id\">아이디</option>\r\n");
      out.write("							<option value=\"address\">주소</option>\r\n");
      out.write("							<option value=\"all\">전체</option>\r\n");
      out.write("						</select>\r\n");
      out.write("						<input type=\"text\" name=\"searchWord\" >\r\n");
      out.write("						<button class=\"btn btn-primary mx-1\" >검색</button>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	$(\"#checkAll\").on(\"click\",function(){\r\n");
      out.write("		if($(\"#checkAll\").is(\":checked\")) {\r\n");
      out.write("			$(\".check\").prop(\"checked\",true);\r\n");
      out.write("		} else {\r\n");
      out.write("			$(\".check\").prop(\"checked\",false);\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	$(\".btnDelete\").on(\"click\",function(){\r\n");
      out.write("		console.log(\"나는 마지막 줄에 return false가 있어서 form태그의 액션에 있는 주소로 가지 않음\");\r\n");
      out.write("		console.log($(this).data(\"no\"));\r\n");
      out.write("		console.log($(this));\r\n");
      out.write("		const $parent = $(this).parent().parent();\r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url:\"../member/delete-process02.jsp\",\r\n");
      out.write("			data:{\r\n");
      out.write("				userNo:$(this).data(\"no\"),\r\n");
      out.write("			},\r\n");
      out.write("			success:function(response){\r\n");
      out.write("				console.log(response);\r\n");
      out.write("				if(response.isDelete===\"success\"){\r\n");
      out.write("					// alert(\"삭제 되었음\");\r\n");
      out.write("					// location.reload(); //새로고침\r\n");
      out.write("					console.log($(this)); //삭제 + 새로고침\r\n");
      out.write("					$parent.remove();\r\n");
      out.write("				} else {\r\n");
      out.write("					alert(\"서버 오류입니다.\");\r\n");
      out.write("				}\r\n");
      out.write("			},\r\n");
      out.write("			fail:function(){\r\n");
      out.write("				\r\n");
      out.write("			}\r\n");
      out.write("		})\r\n");
      out.write("		return false;\r\n");
      out.write("\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</main>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("  <footer class=\"d-flex flex-wrap justify-content-between align-items-center py-3 my-4 border-top\">\r\n");
      out.write("    <div class=\"col-md-4 d-flex align-items-center\">\r\n");
      out.write("      <a href=\"/\" class=\"mb-3 me-2 mb-md-0 text-body-secondary text-decoration-none lh-1\">\r\n");
      out.write("        <svg class=\"bi\" width=\"30\" height=\"24\"><use xlink:href=\"#bootstrap\"></use></svg>\r\n");
      out.write("      </a>\r\n");
      out.write("      <span class=\"mb-3 mb-md-0 text-body-secondary\">Â© 2023 Company, Inc</span>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <ul class=\"nav col-md-4 justify-content-end list-unstyled d-flex\">\r\n");
      out.write("      <li class=\"ms-3\"><a class=\"text-body-secondary\" href=\"#\"><svg class=\"bi\" width=\"24\" height=\"24\"><use xlink:href=\"#twitter\"></use></svg></a></li>\r\n");
      out.write("      <li class=\"ms-3\"><a class=\"text-body-secondary\" href=\"#\"><svg class=\"bi\" width=\"24\" height=\"24\"><use xlink:href=\"#instagram\"></use></svg></a></li>\r\n");
      out.write("      <li class=\"ms-3\"><a class=\"text-body-secondary\" href=\"#\"><svg class=\"bi\" width=\"24\" height=\"24\"><use xlink:href=\"#facebook\"></use></svg></a></li>\r\n");
      out.write("    </ul>\r\n");
      out.write("  </footer>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- footer ë -->\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
